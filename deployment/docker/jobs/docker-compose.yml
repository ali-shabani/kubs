services:
  healthy-db:
    image: postgres:16.2
    restart: no
    command:
      - sh
      - -c
      - |
        attempt_counter=0
        max_attempts=5
        until pg_isready -h postgres -U postgres; do
          attempt_counter=$(($attempt_counter+1))
          if [ $attempt_counter -eq $max_attempts ]; then
            echo "postgres is not ready after $max_attempts attempts. Exiting."
            exit 1
          fi
          echo "Waiting for pg to be ready... Attempt: $attempt_counter"
          sleep 3
        done
    networks:
      - infrastructure

  db-migration:
    image: arigaio/atlas:0.22.0
    depends_on:
      healthy-db:
        condition: service_completed_successfully
    volumes:
      - ../../../db/migrations:/migrations:ro
    command:
      ["migrate", "apply", "--url", "$BUYNOW_DATABASE_URL?sslmode=disable"]
    networks:
      - infrastructure

  healthy-hasura:
    image: curlimages/curl:8.7.1
    restart: no
    command:
      - sh
      - -c
      - |
        attempt_counter=0
        max_attempts=5
        until curl --fail http://hasura:8080/healthz; do
          attempt_counter=$(($attempt_counter+1))
          if [ $attempt_counter -eq $max_attempts ]; then
            echo "Hasura is not ready after $max_attempts attempts. Exiting."
            exit 1
          fi
          echo "Waiting for Hasura to be ready... Attempt: $attempt_counter"
          sleep 3
        done
    networks:
      - infrastructure

  hasura-metadata-apply:
    build:
      context: .
      dockerfile: ./hasura/Dockerfile
    image: buynow/hasura-metadata-apply
    environment:
      HASURA_ADMIN_SECRET: $HASURA_ADMIN_SECRET
    depends_on:
      healthy-hasura:
        condition: service_completed_successfully
    volumes:
      - ../../../hasura:/hasura
    networks:
      - infrastructure

networks:
  infrastructure:
    external: true
